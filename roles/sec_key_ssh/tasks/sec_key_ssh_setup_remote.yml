---
- name: "Security / Key / SSH / Setup / Remote / Check required parameters"
  ansible.builtin.assert:
    quiet: true
    that:
      - (sec_key_ssh___target['key_file'] is defined and sec_key_ssh___target['key_file'] | length > 0) or
        (sec_key_ssh___target['key_string'] is defined and sec_key_ssh___target['key_string'] | length > 0)
      - sec_key_ssh___target['host'] is defined
      - sec_key_ssh___target['host'] | length > 0
      - sec_key_ssh___target['user'] is defined
      - sec_key_ssh___target['user'] | length > 0

- name: "Security / Key / SSH / Setup / Remote / Get public key from source host"
  become: true
  ansible.builtin.slurp:
    src: "{{ sec_key_ssh___target['key_file'] }}"
  register: "sec_key_ssh___public_file"
  changed_when: false
  when:
    - not (sec_key_ssh___target['key_string'] is defined and
            sec_key_ssh___target['key_string'] | length > 0)

- name: "Security / Key / SSH / Setup / Remote / Prepare key content"
  ansible.builtin.set_fact:
    sec_key_ssh___key: "
      {%-
        if sec_key_ssh___public_file['content'] is defined and
          sec_key_ssh___public_file['content'] | length > 0
      -%}
        {{
          sec_key_ssh___public_file['content'] |
          b64decode |
          replace('\n', '')
        }}
      {%- else -%}
        {{ sec_key_ssh___target['key_string'] }}
      {%- endif -%}
      "

- name: "Security / Key / SSH / Setup / Remote / Deploy Public Key to Target Host ({{ sec_key_ssh___target['host'] }})"
  delegate_to: "{{ sec_key_ssh___target['host'] }}"
  become: true
  ansible.posix.authorized_key:
    exclusive: false
    manage_dir: true
    follow: false
    state: "present"
    user: "{{ sec_key_ssh___target['user'] }}"
    key: "{{ sec_key_ssh___key }}"
  when:
    - sec_key_ssh___key | length > 0
...
